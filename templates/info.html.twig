{% extends "base.html.twig" %}

{% block body %}
	
<h1>Тестовое задание</h1>

<p>
	Необходимо написать CRUD сервис для управления библиотекой книг.<br>
</p>

<hr>

<p>
	<strong>Модель данных книги:</strong>
</p>
<ul>
	<li>Название</li>
	<li>Автор (отдельный crud для авторов), может быть несколько авторов</li>
	<li>Описание</li>
	<li>Обложка (изображение)</li>
	<li>Год публикации</li>
</ul>

<hr>

<p>
	<strong>Основная функциональность:</strong>
</p>
<ol>
	<li>Добавление, редактирование, просмотр списка авторов</li>
	<li>Добавление, редактирование книг</li>
	<li>Список книг. В списке необходимо реализовать inline редактирование всех свойств модели “Книга”</li>
	<li>В список добавить фильтрацию по всем свойствам книг</li>
	<li>Реализовать event листенер, который при сохранении книги, обновляет у автора кол-во книг (агрегируемое поле). Обновлять с помощью update запроса к базе данных</li>
</ol>

<hr>

<p>
	<strong>Дополнительная функциональность:</strong>
</p>
<ol>
	<li>Реализовать тот же CRUD с использованием SonataAdminBundle</li>
	<li>Реализовать аутентификацию и авторизацию в админ панель с использованием FOSUserBundle + SonataUserBundle</li>
</ol>
<p>
	<strong>Написать нативный SQL запрос</strong>: Получить список книг, которые 
	написаны более 2-мя со-авторами. То есть получить отчет «книга — количество 
	соавторов» и отфильтровать те, у которых со-авторов меньше 2х.
</p>
<p>
	<strong>Тот же самой запрос написать с использование Doctrine ORM.</strong>
</p>
<p>
	Сделать генерацию фейковых данных для книг и авторов, чтобы протестить запросы и фильтрацию.
</p>

<hr>

<p>
	<strong>Требования:</strong>
</p>
<ol>
	<li>PHP 7.4</li>
	<li>Написать с использованием фреймворка symfony 4.4</li>
	<li>Не использовать любые дополнительные пакеты/бандлы для symfony</li>
	<li>Использовать скв git. Каждое функционально атомарное изменение заливать в git</li>
	<li>По окончанию залить проект на github или bitbucket и прислать ссылку</li>
	<li>Задеплоить на любом бесплатном хостинге и прислать ссылку</li>
</ol>

{% endblock %}
